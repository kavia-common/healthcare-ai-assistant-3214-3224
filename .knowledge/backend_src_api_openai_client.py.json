{"is_source_file": true, "format": "Python", "description": "This Python source file provides utilities for integrating with the OpenAI chat completion API, specifically tailored for a dual-agent healthcare conversation system. It includes functions for preparing API requests, handling mock responses in development, and orchestrating two agents (triage and recommendation) to converse based on user input.", "external_files": [".config"], "external_methods": ["get_settings"], "published": ["get_dual_agent_responses"], "classes": [], "methods": [{"name": "_headers()", "description": "Generates the authorization headers for OpenAI API requests, fetching the API key from settings.", "scope": "", "scopeKind": ""}, {"name": "str _post_chat( messages, model: str = \"gpt-4o-mini\", temperature: float = 0.2, )", "description": "Sends a chat message to the OpenAI API or returns a mock response if no API key is configured.", "scope": "", "scopeKind": ""}, {"name": "Tuple[str,str] get_dual_agent_responses(user_message: str)", "description": "Public function that orchestrates the two-agent conversation, returning responses from both agents based on user input.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "_headers", "_post_chat", "httpx.AsyncClient.post"], "search-terms": ["OpenAI chat utils", "two-agent healthcare conversation", "dual-agent response system", "openai_client.py"], "state": 2, "file_id": 8, "knowledge_revision": 45, "git_revision": "51dea49aebd40e80e773796835817909be1478fc", "revision_history": [{"26": "9df9a08102a57f46a54ba61ee29c03d70d2e2223"}, {"35": "9df9a08102a57f46a54ba61ee29c03d70d2e2223"}, {"40": "51dea49aebd40e80e773796835817909be1478fc"}, {"45": "51dea49aebd40e80e773796835817909be1478fc"}], "ctags": [{"_type": "tag", "name": "OPENAI_API_URL", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^OPENAI_API_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^def _headers():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_post_chat", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^async def _post_chat($/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "( messages, model: str = \"gpt-4o-mini\", temperature: float = 0.2, )"}, {"_type": "tag", "name": "get_dual_agent_responses", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^async def get_dual_agent_responses(user_message: str) -> Tuple[str, str]:$/", "language": "Python", "typeref": "typename:Tuple[str,str]", "kind": "function", "signature": "(user_message: str)"}], "hash": "d9c830ed6ebe6c689d0d49bc5799b96c", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/openai_client.py", "fields": [{"name": "OPENAI_API_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"", "scope": "", "scopeKind": "", "description": "unavailable"}]}