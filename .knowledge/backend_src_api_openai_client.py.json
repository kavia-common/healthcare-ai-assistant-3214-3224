{"is_source_file": true, "format": "Python", "description": "This source file provides utilities for integrating with the OpenAI API, including functions for making POST requests to generate chat completions and a public method to obtain dual-agent responses within a healthcare context.", "external_files": ["./config"], "external_methods": ["get_settings"], "published": ["get_dual_agent_responses"], "classes": [], "methods": [{"name": "_headers()", "description": "Generates headers for the API request, including authorization if an API key is available.", "scope": "", "scopeKind": ""}, {"name": "str _post_chat(messages, model: str = \"gpt-4o-mini\", temperature: float = 0.2)", "description": "Makes an asynchronous POST request to the OpenAI chat completions API with provided messages, model, and temperature, returning the assistant's message content or a mock response if API key is absent.", "scope": "", "scopeKind": ""}, {"name": "Tuple[str,str] get_dual_agent_responses(user_message: str)", "description": "Public async function that coordinates two healthcare agents to process a user message, returning their respective responses.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "httpx.AsyncClient.post"], "search-terms": ["openai_client", "dual-agent", "chat/completions", "healthcare-ai", "async"], "state": 2, "file_id": 8, "knowledge_revision": 35, "git_revision": "9df9a08102a57f46a54ba61ee29c03d70d2e2223", "revision_history": [{"26": "9df9a08102a57f46a54ba61ee29c03d70d2e2223"}, {"35": "9df9a08102a57f46a54ba61ee29c03d70d2e2223"}], "ctags": [{"_type": "tag", "name": "OPENAI_API_URL", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^OPENAI_API_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^def _headers():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_post_chat", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^async def _post_chat(messages, model: str = \"gpt-4o-mini\", temperature: float = 0.2) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages, model: str = \"gpt-4o-mini\", temperature: float = 0.2)"}, {"_type": "tag", "name": "get_dual_agent_responses", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/openai_client.py", "pattern": "/^async def get_dual_agent_responses(user_message: str) -> Tuple[str, str]:$/", "language": "Python", "typeref": "typename:Tuple[str,str]", "kind": "function", "signature": "(user_message: str)"}], "hash": "43d3a0b6ce14123a23ea7b242f143133", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/openai_client.py", "fields": [{"name": "OPENAI_API_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"", "scope": "", "scopeKind": "", "description": "unavailable"}]}