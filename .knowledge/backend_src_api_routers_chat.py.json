{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for chat interactions in a healthcare AI assistant backend, including message handling, thread management, and integration with an external AI response provider.", "external_files": ["from .db", "from .schemas", "from .openai_client", "from . import models"], "external_methods": ["get_db_session", "SendChatResponse.model_validate", "ChatMessageOut.model_validate", "get_dual_agent_responses"], "published": ["send_chat"], "classes": [{"name": "models.ChatThread", "description": "Represents a chat thread associated with a patient, tracking conversation state."}, {"name": "models.ChatMessage", "description": "Represents individual chat messages within a thread, including roles such as user, agent1, agent2."}, {"name": "models.Patient", "description": "Represents a patient entity in the database."}], "methods": [{"name": "models.ChatThread _ensure_thread_for_patient(db: Session, patient_id: int)", "description": "Retrieves the latest chat thread for a patient or creates a new one if none exists.", "scope": "", "scopeKind": ""}, {"name": "send_chat(payload: SendChatRequest, db: Session = Depends(get_db_session))", "description": "Endpoint that processes user messages, retrieves AI agent responses, stores messages, and returns the conversation details.", "scope": "", "scopeKind": ""}], "calls": ["get_dual_agent_responses", "db.query", "db.add", "db.flush", "db.refresh", "models.ChatThread", "models.ChatMessage", "models.Patient", "SendChatResponse.model_validate", "ChatMessageOut.model_validate"], "search-terms": ["APIRouter", "send_chat", "dual_agent_responses", "chat message handling", "patient thread management"], "state": 2, "file_id": 9, "knowledge_revision": 18, "git_revision": "", "ctags": [{"_type": "tag", "name": "_ensure_thread_for_patient", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_chat.py", "pattern": "/^def _ensure_thread_for_patient(db: Session, patient_id: int) -> models.ChatThread:$/", "language": "Python", "typeref": "typename:models.ChatThread", "kind": "function", "signature": "(db: Session, patient_id: int)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_chat.py", "pattern": "/^router = APIRouter(prefix=\"\\/chat\", tags=[\"Chat\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "send_chat", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_chat.py", "pattern": "/^async def send_chat(payload: SendChatRequest, db: Session = Depends(get_db_session)):$/", "language": "Python", "kind": "function", "signature": "(payload: SendChatRequest, db: Session = Depends(get_db_session))"}], "hash": "2c8ede196e08c2bd5dd81fe6e085bc35", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routers_chat.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/chat\", tags=[\"Chat\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18": ""}]}