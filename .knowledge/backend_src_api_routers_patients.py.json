{"is_source_file": true, "format": "Python", "description": "This file defines REST API routes for managing patient records and chat history in a healthcare AI assistant project using FastAPI and SQLAlchemy ORM. It includes endpoints for listing patients, creating/updating patient records, and retrieving chat history with messages. The code references models and schemas specific to patients and chat threads, and utilizes dependency injection for database sessions.", "external_files": ["./db", ".models", ".schemas"], "external_methods": ["get_db_session"], "published": ["router"], "classes": [], "methods": [{"name": "list_patients(db: Session = Depends(get_db_session))", "description": "Retrieves and returns a list of all patients, ordered by creation date descending.", "scope": "", "scopeKind": ""}, {"name": "upsert_patient( payload: PatientCreate, db: Session = Depends(get_db_session) )", "description": "Creates a new patient record or updates an existing one based on provided ID. It either fetches and updates an existing patient or adds a new patient to the database.", "scope": "", "scopeKind": ""}, {"name": "get_history(patient_id: int, db: Session = Depends(get_db_session))", "description": "Retrieves all chat threads and associated messages for a specified patient ID.", "scope": "", "scopeKind": ""}], "calls": ["db.query(models.Patient)", "db.query(models.Patient).filter(models.Patient.id == payload.id).first()", "db.query(models.ChatThread).filter(models.ChatThread.patient_id == patient_id).order_by(models.ChatThread.updated_at.desc()).all()", "t.messages"], "search-terms": ["APIRouter", "Patient CRUD", "chat history", "FastAPI", "SQLAlchemy session"], "state": 2, "file_id": 11, "knowledge_revision": 37, "git_revision": "9df9a08102a57f46a54ba61ee29c03d70d2e2223", "revision_history": [{"24": ""}, {"37": "9df9a08102a57f46a54ba61ee29c03d70d2e2223"}], "ctags": [{"_type": "tag", "name": "get_history", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_patients.py", "pattern": "/^def get_history(patient_id: int, db: Session = Depends(get_db_session)):$/", "language": "Python", "kind": "function", "signature": "(patient_id: int, db: Session = Depends(get_db_session))"}, {"_type": "tag", "name": "list_patients", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_patients.py", "pattern": "/^def list_patients(db: Session = Depends(get_db_session)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db_session))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_patients.py", "pattern": "/^router = APIRouter(prefix=\"\\/patients\", tags=[\"Patients\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "upsert_patient", "path": "/home/kavia/workspace/code-generation/healthcare-ai-assistant-3214-3224/backend/src/api/routers_patients.py", "pattern": "/^def upsert_patient($/", "language": "Python", "kind": "function", "signature": "( payload: PatientCreate, db: Session = Depends(get_db_session) )"}], "hash": "c585678fbbbd1ae0900e4654b4058939", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routers_patients.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/patients\", tags=[\"Patients\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}